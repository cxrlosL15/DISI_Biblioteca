@page
@model ReportesModel
@{
    ViewData["Title"] = "Reportes de Biblioteca";
}

<link href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@700&family=Montserrat:wght@600&family=Open+Sans&display=swap" rel="stylesheet" />

<style>
    body {
        background-color: #FAFAF8;
        font-family: 'Open Sans', sans-serif;
        margin: 0;
        padding: 20px;
    }

    h1 {
        font-family: 'Playfair Display', serif;
        color: #0B0F27;
        font-size: 36px;
        margin-bottom: 20px;
    }

    h2 {
        font-family: 'Montserrat', sans-serif;
        color: #6F8249;
        font-size: 24px;
        margin-top: 40px;
    }

    .reporte-container {
        background-color: #E5E0CF;
        padding: 30px;
        border-radius: 16px;
        box-shadow: 0 0 10px rgba(0,0,0,0.1);
        max-width: 1000px;
        margin: auto;
    }

    canvas {
        width: 400px;
        height: 400px;
        margin-top: 20px;
        display: block;
        margin-left: auto;
        margin-right: auto;

        /*
        max-width: 100%;
        height: auto;
        margin-top: 20px;
        */
    }

    .chart-section {
        margin-bottom: 40px;
    }

    .chart-row {
        display: flex;
        justify-content: space-around;
        flex-wrap: wrap;
        gap: 20px;
    }

    .chart-column {
        flex: 1;
        min-width: 300px;
        max-width: 450px;
    }

    .btn-pdf {
        background-color: #765E49;
        color: #FAFAF8;
        padding: 10px 20px;
        border: none;
        border-radius: 8px;
        cursor: pointer;
        font-family: 'Montserrat', sans-serif;
        font-size: 16px;
    }

        .btn-pdf:hover {
            background-color: #6F8249;
        }

    .selector-container {
        display: flex;
        gap: 20px;
        justify-content: center;
        margin-bottom: 20px;
        flex-wrap: wrap;
    }

    .selector-card {
        background-color: #fff;
        border: 2px solid #ccc;
        border-radius: 12px;
        padding: 20px;
        text-align: center;
        width: 200px;
        cursor: pointer;
        font-family: 'Montserrat', sans-serif;
        transition: all 0.3s ease;
    }

        .selector-card.selected {
            border-color: #6F8249;
            background-color: #E5E0CF;
            box-shadow: 0 0 10px rgba(0,0,0,0.15);
        }
</style>

<div class="admin-container page-container">

<div class="selector-container">
    <div class="selector-card" data-section="libros">📚 Libros más prestados</div>
    <div class="selector-card" data-section="clientes">👥 Clientes con multas</div>
    <div class="selector-card" data-section="inventario">📦 Inventario general</div>
</div>

<div class="reporte-container">
    <h1>Reportes de Biblioteca</h1>

    <form method="post" asp-page-handler="GenerarPDF" id="pdfForm"> 
        <input type="hidden" name="SeccionesSeleccionadas" id="SeccionesSeleccionadas" />
        <button type="submit" class="btn-pdf">Exportar PDF</button> 
     </form>

    <div class="chart-section" id="chartLibrosSection">
        <h2>Libros más prestados</h2>
        <div class="chart-row">
            <div class="chart-column">
                <canvas id="lineLibros"></canvas>
            </div>
            <div class="chart-column">
                <canvas id="chartLibros"></canvas>
            </div>
        </div>
    </div>

    <div class="chart-section" id="chartClientesSection">
        <h2>Clientes con más multas</h2>
        <div class="chart-row">
            <div class="chart-column">
                <canvas id="lineClientes"></canvas>
            </div>
            <div class="chart-column">
                <canvas id="chartClientes"></canvas>
            </div>
        </div>
    </div>

    <div class="chart-section" id="chartInventarioSection">
        <h2>Inventario general</h2>
        <div class="chart-row">
            <div class="chart-column">
                <canvas id="lineInventario"></canvas>
            </div>
            <div class="chart-column">
                <canvas id="chartInventario"></canvas>
            </div>
        </div>
    </div>
</div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.0/dist/chart.umd.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2.2.0/dist/chartjs-plugin-datalabels.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/0.4.1/html2canvas.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.4.0/jspdf.umd.min.js"></script>

<script>
    // Función para crear los gráficos
    const createPieChart = (canvasId, labels, data, colors) => {
        const ctx = document.getElementById(canvasId).getContext('2d');
        new Chart(ctx, {
            type: 'pie',
            data: {
                labels: labels,
                datasets: [{
                    data: data,
                    backgroundColor: colors
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'bottom',
                        labels: {
                            color: '#0B0F27',
                            font: {
                                family: 'Open Sans'
                            }
                        }
                    },
                    datalabels: {
                        color: '#FAFAF8',
                        font: {
                            weight: 'bold',
                            size: 14
                        },
                        formatter: (value, context) => {
                            const total = context.chart.data.datasets[0].data.reduce((a, b) => a + b, 0);
                            const percentage = ((value / total) * 100).toFixed(1) + '%';
                            return `${value} (${percentage})`;
                        }
                    }
                }
            },
            plugins: [ChartDataLabels]
        });
    };

    const createLineChart = (canvasId, labels, data, color) => {
        const ctx = document.getElementById(canvasId).getContext('2d');
        new Chart(ctx, {
            type: 'line',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Cantidad',
                    data: data,
                    borderColor: color,
                    backgroundColor: color + '55',
                    fill: true,
                    tension: 0.3,
                    pointRadius: 5
                }]
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true
                    }
                },
                plugins: {
                    legend: {
                        display: false
                    }
                }
            }
        });
    };

    // Reemplaza por tus datos desde el modelo Razor
    const librosLabels = @Html.Raw(Json.Serialize(Model.LibrosLabels));
    const librosData = @Html.Raw(Json.Serialize(Model.LibrosData));
    const clientesLabels = @Html.Raw(Json.Serialize(Model.ClientesLabels));
    const clientesData = @Html.Raw(Json.Serialize(Model.ClientesData));
    const inventarioLabels = @Html.Raw(Json.Serialize(Model.InventarioLabels));
    const inventarioData = @Html.Raw(Json.Serialize(Model.InventarioData));

    // Crear gráficos con datos de la vista
    createPieChart("chartLibros", @Html.Raw(Json.Serialize(Model.LibrosLabels)), @Html.Raw(Json.Serialize(Model.LibrosData)), ["#0B0F27", "#6F8249", "#765E49", "#E5E0CF", "#FAFAF8"]);
    createPieChart("chartClientes", @Html.Raw(Json.Serialize(Model.ClientesLabels)), @Html.Raw(Json.Serialize(Model.ClientesData)), ["#765E49", "#6F8249", "#0B0F27", "#E5E0CF", "#FAFAF8"]);
    createPieChart("chartInventario", @Html.Raw(Json.Serialize(Model.InventarioLabels)), @Html.Raw(Json.Serialize(Model.InventarioData)), ["#6F8249", "#765E49", "#0B0F27"]);

        createLineChart("lineLibros", librosLabels, librosData, "#0B0F27");
    createLineChart("lineClientes", clientesLabels, clientesData, "#765E49");
    createLineChart("lineInventario", inventarioLabels, inventarioData, "#6F8249");

</script>

<script>
    const selectorCards = document.querySelectorAll('.selector-card');
    const inputSecciones = document.getElementById('SeccionesSeleccionadas');

    selectorCards.forEach(card => {
        card.addEventListener('click', () => {
            card.classList.toggle('selected');
        });
    });

    document.getElementById('pdfForm').addEventListener('submit', (e) => {
        const seleccionadas = Array.from(selectorCards)
            .filter(c => c.classList.contains('selected'))
            .map(c => c.getAttribute('data-section'));
        inputSecciones.value = seleccionadas.join(',');
    });
</script>
