@page
@model BibliotecaRinconDelLibro.Pages.Clientes.EditModel

@{
    ViewData["Title"] = "Editar información del Cliente";
}
<div class="admin-container page-container">

<h1>Editar datos del cliente</h1>


<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Cliente.IdClientes" />
            <div class="form-group">
                <label asp-for="Cliente.Nombre" class="control-label"></label>
                <input asp-for="Cliente.Nombre" class="form-control" />
                <span asp-validation-for="Cliente.Nombre" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Cliente.ApellidoP" class="control-label"></label>
                <input asp-for="Cliente.ApellidoP" class="form-control" />
                <span asp-validation-for="Cliente.ApellidoP" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Cliente.ApellidoM" class="control-label"></label>
                <input asp-for="Cliente.ApellidoM" class="form-control" />
                <span asp-validation-for="Cliente.ApellidoM" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Cliente.Correo" class="control-label"></label>
                <input asp-for="Cliente.Correo" class="form-control" />
                <span asp-validation-for="Cliente.Correo" class="text-danger"></span>
            </div>

            <h4>Dirección del Cliente</h4>

            <div class="form-group">
                <label asp-for="Direccion.Calle" class="control-label"></label>
                <input asp-for="Direccion.Calle" class="form-control" />
                <span asp-validation-for="Direccion.Calle" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Direccion.Colonia" class="control-label"></label>
                <input asp-for="Direccion.Colonia" class="form-control" />
                <span asp-validation-for="Direccion.Colonia" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Direccion.CodigoPostal" class="control-label"></label>
                <input asp-for="Direccion.CodigoPostal" id="valorCPInput" class="form-control" />
                <span asp-validation-for="Direccion.CodigoPostal" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Direccion.Ciudad" class="control-label"></label>
                <input asp-for="Direccion.Ciudad" class="form-control" />
                <span asp-validation-for="Direccion.Ciudad" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Direccion.Estado" class="control-label"></label>
                <input asp-for="Direccion.Estado" class="form-control" />
                <span asp-validation-for="Direccion.Estado" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Cliente.Valoracion" class="control-label"></label>
                <input asp-for="Cliente.Valoracion" class="form-control" />
                <span asp-validation-for="Cliente.Valoracion" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Guardar" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div class="mt-3">
    <a asp-page="./Index" class="btn btn-secondary">
        <i class="bi bi-arrow-left"></i> Regresar
    </a>
</div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        // --- Funciones genéricas de filtrado para entradas de númericas---
        function attachIntegerFilter(el) {
            if (!el) return;
            el.addEventListener('keydown', e => {
                const nav = ['Backspace', 'Tab', 'ArrowLeft', 'ArrowRight', 'Delete', 'Home', 'End'];
                if (nav.includes(e.key)) return;
                if (!/^[0-9]$/.test(e.key)) e.preventDefault();
            });
            el.addEventListener('input', e => {
                const clean = e.target.value.replace(/\D/g, '');
                if (clean !== e.target.value) e.target.value = clean;
            });
            el.addEventListener('paste', e => {
                e.preventDefault();
                const txt = (e.clipboardData || window.clipboardData).getData('text').replace(/\D/g, '');
                document.execCommand('insertText', false, txt);
            });
        }

        function attachDecimalFilter(el) {
            if (!el) return;
            el.addEventListener('keydown', e => {
                const nav = ['Backspace', 'Tab', 'ArrowLeft', 'ArrowRight', 'Delete', 'Home', 'End'];
                if (nav.includes(e.key)) return;
                if (e.key === '.') {
                    if (el.value.includes('.')) e.preventDefault();
                    return;
                }
                if (!/^[0-9]$/.test(e.key)) e.preventDefault();
            });
            el.addEventListener('input', e => {
                let txt = e.target.value.replace(/[^0-9.]/g, '');
                const parts = txt.split('.');
                if (parts.length > 2) txt = parts[0] + '.' + parts.slice(1).join('');
                if (txt !== e.target.value) e.target.value = txt;
            });
            el.addEventListener('paste', e => {
                e.preventDefault();
                let txt = (e.clipboardData || window.clipboardData).getData('text').replace(/[^0-9.]/g, '');
                const parts = txt.split('.');
                if (parts.length > 2) txt = parts[0] + '.' + parts.slice(1).join('');
                document.execCommand('insertText', false, txt);
            });
        }

        // --- Montaje sobre varios inputs ---
        window.addEventListener('DOMContentLoaded', () => {
            // ids de campos integer-only
            ['qtyInput', /* agrega aquí cualquier otro id de integer */]
                .forEach(id => attachIntegerFilter(document.getElementById(id)));

            // ids de campos decimal
            ["valorCPInput", /* otros id de decimales */]
                .forEach(id => attachDecimalFilter(document.getElementById(id)));
        });
    </script>
}
